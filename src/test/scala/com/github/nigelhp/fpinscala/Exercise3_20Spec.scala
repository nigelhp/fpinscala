package com.github.nigelhp.fpinscala

import org.scalatest.FlatSpec

import fpinscala.datastructures._

import Exercise3_20.flatMap

class Exercise3_20Spec extends FlatSpec {

  "flatMap" should "return an empty list when the input list is empty" in {
    assert(flatMap(Nil)(e => List(1, 2, 3)) === Nil)
  }

  it should "return an empty list when the mapping function always returns an empty list" in {
    assert(flatMap(List(1, 2, 3))(i => Nil) === Nil)
  }

  it should "return the list generated by the mapping function when the input list contains one element" in {
    assert(flatMap(List(1))(i => List(i, i)) === List(1, 1))
  }

  it should "return a list containing the results of the mapping functions appended together" in {
    assert(flatMap(List(1, 2, 3))(i => List(i, i)) === List(1, 1, 2, 2, 3, 3))
  }
}
